#!/bin/bash

SUDO=$(command -v sudo)
SCRIPT_DIR="/usr/local/tech-scripts"
CONFIG_FILE="/etc/tech-scripts/alert.conf"
LANG_CONF=$(grep '^lang:' /etc/tech-scripts/choose.conf 2>/dev/null | cut -d' ' -f2)

if [[ "$LANG_CONF" == "–†—É—Å—Å–∫–∏–π" ]]; then
    MSG_INSTALL_JQ="–£—Å—Ç–∞–Ω–æ–≤–∫–∞ jq..."
    MSG_BOT_TOKEN="–í–≤–µ–¥–∏—Ç–µ —Ç–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ Telegram-–±–æ—Ç–∞: "
    MSG_CHAT_ID="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à chat_id –≤ Telegram: "
    MSG_CREATE_SCRIPT="–°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –≤ $SCRIPT_DIR/alert.sh..."
    MSG_ADD_AUTOSTART="–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫..."
    MSG_SUCCESS_INSTALL="–°–∫—Ä–∏–ø—Ç —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫!"
    MSG_SCRIPT_LOCATION="–°–∫—Ä–∏–ø—Ç —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω –≤: $SCRIPT_DIR/alert.sh"
    MSG_SERVICE_LOCATION="–°–µ—Ä–≤–∏—Å —Å–∫—Ä–∏–ø—Ç–∞ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω –≤: /etc/systemd/system/ssh.alert.service"
    MSG_CONFIG_LOCATION="–ö–æ–Ω—Ñ–∏–≥ —Å–∫—Ä–∏–ø—Ç–∞ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω –≤: $CONFIG_FILE"
    MSG_ALREADY_INSTALLED="–°–∫—Ä–∏–ø—Ç —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏ –∑–∞–ø—É—â–µ–Ω!"
    MSG_REMOVE_CHOICE="–•–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å ssh.alert –∏–∑ –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞?"
    MSG_REMOVED="ssh.alert —É–¥–∞–ª–µ–Ω –∏–∑ –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞!"
    MSG_START_CHOICE="–°–∫—Ä–∏–ø—Ç —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –•–æ—Ç–∏—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å –µ–≥–æ —Å–µ–π—á–∞—Å?"
    MSG_STARTED="–°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω!"
    MSG_NOT_STARTED="–°–∫—Ä–∏–ø—Ç –Ω–µ –∑–∞–ø—É—â–µ–Ω!"
    MSG_SERVICE_MISSING="–°–∫—Ä–∏–ø—Ç —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –Ω–æ —Å–µ—Ä–≤–∏—Å ssh.alert.service –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    MSG_CREATE_CHOICE="–•–æ—Ç–∏—Ç–µ —Å–æ–∑–¥–∞—Ç—å –∏ –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–∏—Å?"
    MSG_SERVICE_CREATED="–°–µ—Ä–≤–∏—Å —Å–æ–∑–¥–∞–Ω –∏ –∑–∞–ø—É—â–µ–Ω!"
    MSG_REMOVE_CONFIG="–•–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª $CONFIG_FILE?"
    MSG_REMOVE_SCRIPT="–•–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —Å–∫—Ä–∏–ø—Ç $SCRIPT_DIR/alert.sh?"
    MSG_UPDATE_SCRIPT="–í—ã —Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å —Å–∫—Ä–∏–ø—Ç?"
    MSG_UPDATE_SUCCESS="–°–∫—Ä–∏–ø—Ç —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!"
    MSG_CREATE_ALERT="–•–æ—Ç–∏—Ç–µ –ª–∏ –≤—ã —Å–æ–∑–¥–∞—Ç—å –æ–ø–æ–≤–µ—â–µ–Ω–∏–µ –æ –≤—Ö–æ–¥–∞—Ö –ø–æ SSH —á–µ—Ä–µ–∑ Telegram?"
    MSG_CONFIG_EXISTS="–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ!"
    MSG_TEST_MESSAGE="‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–∏–ª–∏ —Å–∏—Å—Ç–µ–º—É –æ–ø–æ–≤–µ—â–µ–Ω–∏–π –æ –≤—Ö–æ–¥–∞—Ö –ø–æ SSH ‚úÖ"
    MSG_TEST_FAILED="–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–æ–∫–µ–Ω –∏ chat_id!"
else
    MSG_INSTALL_JQ="Installing jq..."
    MSG_BOT_TOKEN="Enter your Telegram bot token: "
    MSG_CHAT_ID="Enter your Telegram chat_id: "
    MSG_CREATE_SCRIPT="Creating script in $SCRIPT_DIR/alert.sh..."
    MSG_ADD_AUTOSTART="Adding to autostart..."
    MSG_SUCCESS_INSTALL="Script successfully installed and added to autostart!"
    MSG_SCRIPT_LOCATION="The script is located in: $SCRIPT_DIR/alert.sh"
    MSG_SERVICE_LOCATION="The script service is located in: /etc/systemd/system/ssh.alert.service"
    MSG_CONFIG_LOCATION="The script config is located in: $CONFIG_FILE"
    MSG_ALREADY_INSTALLED="Script is already installed and running!"
    MSG_REMOVE_CHOICE="Do you want to remove ssh.alert from autostart?"
    MSG_REMOVED="ssh.alert removed from autostart!"
    MSG_START_CHOICE="Script is already installed. Do you want to start it now?"
    MSG_STARTED="Script started!"
    MSG_NOT_STARTED="Script not started!"
    MSG_SERVICE_MISSING="Script is already installed, but ssh.alert.service is missing!"
    MSG_CREATE_CHOICE="Do you want to create and start the service?"
    MSG_SERVICE_CREATED="Service created and started!"
    MSG_REMOVE_CONFIG="Do you want to remove the configuration file $CONFIG_FILE?"
    MSG_REMOVE_SCRIPT="Do you want to remove the script $SCRIPT_DIR/alert.sh?"
    MSG_UPDATE_SCRIPT="Do you want to update the script?"
    MSG_UPDATE_SUCCESS="Script successfully updated!"
    MSG_CREATE_ALERT="Do you want to create an SSH login alert via Telegram?"
    MSG_CONFIG_EXISTS="Configuration file already exists. Skipping creation!"
    MSG_TEST_MESSAGE="‚úÖ You have successfully set up an SSH login notification system ‚úÖ"
    MSG_TEST_FAILED="Failed to send test message. Please check your token and chat_id!"
fi

show_message() {
    whiptail --msgbox "$1" 10 50
}

input_box() {
    exec 3>&1
    local result=$(whiptail --title "$1" --inputbox "$2" 10 60 3>&1 1>&2 2>&3)
    exec 3>&-
    echo "$result"
}

yes_no_box() {
    whiptail --yesno "$2" 10 50
    return $?
}

send_test_message() {
    local token=$1
    local chat_id=$2
    local thread_id=$3
    local message=$4
    local response
    response=$(curl -s -X POST "https://api.telegram.org/bot${token}/sendMessage" \
        -d chat_id="${chat_id}" \
        ${thread_id:+-d reply_to_message_id="${thread_id}"} \
        -d disable_notification=true \
        --data-urlencode "text=${message}" 2>&1)

    if echo "$response" | grep -q '"ok":true'; then
        return 0
    else
        return 1
    fi
}

create_ssh_alert_service() {
    [ -f "/etc/systemd/system/ssh.alert.service" ] && return
    
    $SUDO tee "/etc/systemd/system/ssh.alert.service" >/dev/null <<EOF
[Unit]
Description=SSH Alert
After=network.target

[Service]
ExecStart=$SCRIPT_DIR/alert.sh
Restart=always
User=root
RestartSec=5
StandardOutput=syslog
StandardError=syslog
SyslogIdentifier=ssh-alert-monitor

[Install]
WantedBy=multi-user.target
EOF

    $SUDO systemctl daemon-reload
    $SUDO systemctl enable --now ssh.alert.service
}

create_ssh_alert_script() {
    [ -f "$SCRIPT_DIR/alert.sh" ] && return
    
    $SUDO mkdir -p "$SCRIPT_DIR"
    $SUDO tee "$SCRIPT_DIR/alert.sh" >/dev/null <<'EOF'
#!/bin/bash

CONFIG_FILE="/etc/tech-scripts/alert.conf"
[ -f "$CONFIG_FILE" ] && source "$CONFIG_FILE"

LANG_CONF=$(grep '^lang:' /etc/tech-scripts/choose.conf 2>/dev/null | cut -d' ' -f2)

if [[ "$LANG_CONF" == "–†—É—Å—Å–∫–∏–π" ]]; then
    MSG_FAILED="üö® –ù–µ—É–¥–∞—á–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞ –≤—Ö–æ–¥–∞ üö®"
    MSG_SUCCESS="‚úÖ –£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥ ‚úÖ"
    MSG_CLOSED="‚ùå –û—Ç–º–µ–Ω–µ–Ω–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞ –≤—Ö–æ–¥–∞ ‚ùå"
    MSG_ERROR="–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è"
    MSG_SENT="–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ."
else
    MSG_FAILED="üö® Failed login attempt üö®"
    MSG_SUCCESS="‚úÖ Successful login ‚úÖ"
    MSG_CLOSED="‚ùå Cancelled login attempt ‚ùå"
    MSG_ERROR="Error sending message"
    MSG_SENT="Message sent successfully."
fi

send_telegram_message() {
    local message="$1"
    local response
    response=$(curl -s -X POST "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage" \
        -d chat_id="${TELEGRAM_CHAT_ID}" \
        ${TELEGRAM_THREAD_ID:+-d reply_to_message_id="${TELEGRAM_THREAD_ID}"} \
        -d disable_notification="${SEND_SILENT}" \
        ${PROTECT_CONTENT:+-d protect_content=true} \
        --data-urlencode "text=${message}" 2>&1)
        
    if echo "$response" | grep -q '"ok":true'; then
        echo "$MSG_SENT"
    else
        echo "$MSG_ERROR: $response" >&2
    fi
}

journalctl -f -u ssh | while read -r line; do
    if echo "$line" | grep -q "sshd.*Failed password"; then
        ip=$(echo "$line" | grep -oP 'from \K[0-9.]+')
        user=$(echo "$line" | grep -oP 'for \K\w+')
        message=$(echo -e "${MSG_FAILED}\n–¢–∏–ø –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: –ø–∞—Ä–æ–ª—å\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${user}\nIP: ${ip}")
        send_telegram_message "$message"
    elif echo "$line" | grep -q "sshd.*Accepted password"; then
        ip=$(echo "$line" | grep -oP 'from \K[0-9.]+')
        user=$(echo "$line" | grep -oP 'for \K\w+')
        message=$(echo -e "${MSG_SUCCESS}\n–¢–∏–ø –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: –ø–∞—Ä–æ–ª—å\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${user}\nIP: ${ip}")
        send_telegram_message "$message"
    elif echo "$line" | grep -q "sshd.*Connection closed"; then
        ip=$(echo "$line" | grep -oP 'from \K[0-9.]+')
        user=$(echo "$line" | grep -oP 'user \K\w+')
        message=$(echo -e "${MSG_CLOSED}\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${user}")
        send_telegram_message "$message"
    elif echo "$line" | grep -q "sshd.*Invalid user"; then
        ip=$(echo "$line" | grep -oP 'from \K[0-9.]+')
        user=$(echo "$line" | grep -oP 'Invalid user \K\w+')
        message=$(echo -e "${MSG_FAILED}\n–¢–∏–ø –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: –ø–∞—Ä–æ–ª—å\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${user}\nIP: ${ip}")
        send_telegram_message "$message"
    elif echo "$line" | grep -q "sshd.*Accepted publickey"; then
        ip=$(echo "$line" | grep -oP 'from \K[0-9.]+')
        user=$(echo "$line" | grep -oP 'for \K\w+')
        message=$(echo -e "${MSG_SUCCESS}\n–¢–∏–ø –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: –∫–ª—é—á ssh\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${user}\nIP: ${ip}")
        send_telegram_message "$message"
    fi
done
EOF

    $SUDO chmod +x "$SCRIPT_DIR/alert.sh"
}

install_jq() {
    command -v jq &>/dev/null && return
    
    if command -v apt &>/dev/null; then
        $SUDO apt update && $SUDO apt install -y jq
    elif command -v yum &>/dev/null; then
        $SUDO yum install -y jq
    elif command -v dnf &>/dev/null; then
        $SUDO dnf install -y jq
    elif command -v zypper &>/dev/null; then
        $SUDO zypper install -y jq
    elif command -v pacman &>/dev/null; then
        $SUDO pacman -S --noconfirm jq
    elif command -v apk &>/dev/null; then
        $SUDO apk add jq
    elif command -v brew &>/dev/null; then
        brew install jq
    else
        echo "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–∞–∫–µ—Ç–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ jq –≤—Ä—É—á–Ω—É—é!" >&2
        exit 1
    fi
}

if [ -f "$CONFIG_FILE" ]; then
    yes_no_box "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞" "$MSG_UPDATE_SCRIPT" && {
        $SUDO rm -f "$SCRIPT_DIR/alert.sh"
        create_ssh_alert_script
        $SUDO systemctl daemon-reload
        echo ""
        echo "$MSG_UPDATE_SUCCESS"
        echo ""
        exit 0
    } || {
        :
    }
fi

if [ -f "$CONFIG_FILE" ] || [ -f "$SCRIPT_DIR/alert.sh" ] || [ -f "/etc/systemd/system/ssh.alert.service" ]; then
    if yes_no_box "–£–¥–∞–ª–µ–Ω–∏–µ" "–•–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é, —Å–∫—Ä–∏–ø—Ç –∏ —Å–µ—Ä–≤–∏—Å ssh.alert?"; then
        [ -f "$CONFIG_FILE" ] && $SUDO rm -f "$CONFIG_FILE" && echo "" && echo "–ö–æ–Ω—Ñ–∏–≥ —É–¥–∞–ª–µ–Ω: $CONFIG_FILE"
        [ -f "$SCRIPT_DIR/alert.sh" ] && $SUDO rm -f "$SCRIPT_DIR/alert.sh" && echo "–°–∫—Ä–∏–ø—Ç —É–¥–∞–ª–µ–Ω: $SCRIPT_DIR/alert.sh"
        if [ -f "/etc/systemd/system/ssh.alert.service" ]; then
            $SUDO rm -f /etc/systemd/system/ssh.alert.service
            $SUDO systemctl daemon-reload
            echo "–°–µ—Ä–≤–∏—Å —É–¥–∞–ª–µ–Ω: /etc/systemd/system/ssh.alert.service"
            echo ""
            exit 0
        fi
        :
    else
        exit 0
    fi
fi

install_jq

if yes_no_box "–°–æ–∑–¥–∞–Ω–∏–µ –æ–ø–æ–≤–µ—â–µ–Ω–∏—è" "$MSG_CREATE_ALERT"; then
    if [ -f "$CONFIG_FILE" ]; then
        echo "$MSG_CONFIG_EXISTS"
    else
        while true; do
            TELEGRAM_BOT_TOKEN=$(input_box "Telegram Bot Token" "$MSG_BOT_TOKEN")
            [ -z "$TELEGRAM_BOT_TOKEN" ] && { exit; }

            TELEGRAM_CHAT_ID=$(input_box "Telegram Chat ID" "$MSG_CHAT_ID")
            [ -z "$TELEGRAM_CHAT_ID" ] && { exit; }
            
            TELEGRAM_THREAD_ID=$(input_box "Telegram Thread ID" "–í–≤–µ–¥–∏—Ç–µ ID —Ü–µ–ø–æ—á–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ):")
            
            if send_test_message "$TELEGRAM_BOT_TOKEN" "$TELEGRAM_CHAT_ID" "$TELEGRAM_THREAD_ID" "$MSG_TEST_MESSAGE"; then
                if yes_no_box "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –±–µ–∑ –∑–≤—É–∫–∞?" "–•–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –±–µ–∑ –∑–≤—É–∫–∞?"; then
                    SEND_SILENT=true
                else
                    SEND_SILENT=false
                fi
                
                if yes_no_box "–†–∞–∑—Ä–µ—à–∏—Ç—å –ø–µ—Ä–µ—Å—ã–ª–∫—É?" "–•–æ—Ç–∏—Ç–µ —Ä–∞–∑—Ä–µ—à–∏—Ç—å –ø–µ—Ä–µ—Å—ã–ª–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è?"; then
                    ALLOW_FORWARDING=true
                else
                    ALLOW_FORWARDING=false
                fi
                
                break
            else
                show_message "$MSG_TEST_FAILED"
            fi
        done

        $SUDO mkdir -p "/etc/tech-scripts"
        $SUDO tee "$CONFIG_FILE" >/dev/null <<EOF
TELEGRAM_BOT_TOKEN=$TELEGRAM_BOT_TOKEN
TELEGRAM_CHAT_ID=$TELEGRAM_CHAT_ID
TELEGRAM_THREAD_ID=$TELEGRAM_THREAD_ID
SEND_SILENT=$SEND_SILENT
ALLOW_FORWARDING=$ALLOW_FORWARDING
EOF
        $SUDO chmod 600 "$CONFIG_FILE"
        create_ssh_alert_script
        create_ssh_alert_service
        show_message "$MSG_SUCCESS_INSTALL"
        echo ""
        echo "$MSG_SERVICE_LOCATION"
        echo "$MSG_CONFIG_LOCATION"
        echo "$MSG_SCRIPT_LOCATION"
        echo ""
    fi
fi
